// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "gitlab.com/amimof/multikube/api/v1/models"
)

// GetClustersOKCode is the HTTP code returned for type GetClustersOK
const GetClustersOKCode int = 200

/*GetClustersOK List the todo operations

swagger:response getClustersOK
*/
type GetClustersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Cluster `json:"body,omitempty"`
}

// NewGetClustersOK creates GetClustersOK with default headers values
func NewGetClustersOK() *GetClustersOK {

	return &GetClustersOK{}
}

// WithPayload adds the payload to the get clusters o k response
func (o *GetClustersOK) WithPayload(payload []*models.Cluster) *GetClustersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clusters o k response
func (o *GetClustersOK) SetPayload(payload []*models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClustersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Cluster, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetClustersDefault Generic error response

swagger:response getClustersDefault
*/
type GetClustersDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClustersDefault creates GetClustersDefault with default headers values
func NewGetClustersDefault(code int) *GetClustersDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClustersDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get clusters default response
func (o *GetClustersDefault) WithStatusCode(code int) *GetClustersDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get clusters default response
func (o *GetClustersDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get clusters default response
func (o *GetClustersDefault) WithPayload(payload *models.Error) *GetClustersDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clusters default response
func (o *GetClustersDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClustersDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
